#!/usr/bin/env python
# -*- coding:utf-8 -*-

#@author 陆正飞
#api 单独部分检测逻辑代码
from xmlrpclib import boolean
 
def status_code(a): 
    bln =not(boolean(a-200))
    return bln
def result_code(a): 
    jResp = a.json()  
    result_code = jResp["result_code"]
    bln=not(boolean(result_code-200))           
    return bln

def limit_total(a): 
    jResp = a.json() 
    list_limit = jResp['limit']
    cat_total=jResp["total"]   
    bln=boolean(cat_total-list_limit>=0)           
    return bln


def Seq_num_in(a):
    b=[] 
    for i in range(0,200):
        b.append(i)
    for Seq_num in a:         
        if Seq_num in b:
            continue
        else:
            return False
            break
    return True

def cat_listId_len(a,b):
    lenth=len(a) 
    bln=not(boolean(lenth-b))
    return bln

def check_jData_name_mime_type(a):   
    cat_listName=[]   #name
    cat_listMime_type=[]   
    for jCat in a:                                 
        cat_listName.append(jCat["name"])                   
        cat_listMime_type.append(jCat['mime_type'])                  
            
    print '[Name]' 
    print cat_listName      
    print '[Mime_type]'   
    print cat_listMime_type   
    
def check_jData_app_name_package_name_version_name_cat_app_permit_signature(a):
    
    for jCat in a:                                 
        print '[app_name]'
        print  jCat['app_name']
        print '[package_name]'
        print  jCat['package_name']
        print '[version_name]'
        print  jCat['version_name']
        print '[cat]'
        print  jCat['cat']
        print '[app_permit]'
        print  jCat['app_permit']
        print '[signature]'
        print  jCat['signature']
         
    
def seq_num(cat_listSeq_num):   
    for Seq_num in cat_listSeq_num:             
            a=type(Seq_num) 
            if (a==int):
                continue
            else:
                return False
                break
    return True

def file_size(jData):
    cat_listFile_size=[]    
    for jCat in jData:
            cat_listFile_size.append(jCat['file_size']) 
            a=type(jCat['file_size']) 
            if (a==int):
                continue
            else:
                return False
                break
    return True

def create_date(jData):
    cat_list_create_date=[]    
    for jCat in jData:
            cat_list_create_date.append(jCat['create_date'])
            a=type(jCat['create_date']) 
            if (a==long):
                continue
            else:
                return False
                break
    return True

def mod_date_is_num(jData):
    cat_list_mod_date=[]
    
    for jCat in jData:
            cat_list_mod_date.append(jCat['mod_date'])       
            a=type(jCat['mod_date']) 
            if (a==long):
                continue
            else:
                return False
                break
    return True

def version_code(jData):
    version_code_list=[]
    for jCat in jData:
        
        version_code_list.append(jCat['version_code'])
        a=type(jCat['version_code']) 
        if (a==int):          
            continue
        else:
            return False
            break
    return True

def price(jData):
    price_list=[]
    for jCat in jData:
        
        price_list.append(jCat['price'])
        a=type(jCat['price']) 
        if (a==int):          
            continue
        else:
            return False
            break
    return True

def download_count(jData):
    download_count_list=[]
    for jCat in jData:
        
        download_count_list.append(jCat['download_count'])
        a=type(jCat['download_count']) 
        if (a==int):          
            continue
        else:
            return False
            break
    return True

def purchase(jData):
    purchase_list=[]
    for jCat in jData:
        
        purchase_list.append(jCat['purchase'])
        a=type(jCat['purchase']) 
        if (a==bool):          
            continue
        else:
            return False
            break
    return True


def parentid_rm(jData):
        cat_listId = [] 
        cat_listParent_id=[]
        for jCat in jData:
            cat_listId.append(jCat['id']) #0000-3b85e060-14ab-4f2a-a5f3-16cec8ebf9a9
            cat_listParent_id.append(jCat['parent_id'])
        
    #此处放在data中的内容
        cat_listId.append(u'0')
    #判断        Parent_id是否包含在listId中
        cat_listParent_idRemSm = list(set(cat_listParent_id))
        for Parent_idRemSm in cat_listParent_idRemSm:
            if Parent_idRemSm in cat_listParent_idRemSm:
                continue
            else:
                return False
                break            
        return True

   
       
    

